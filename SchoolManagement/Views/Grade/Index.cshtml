@using SchoolManagement.Resources;
@using SchoolManagement.Models;
@model IEnumerable<Grade>

@(Html.Kendo().Grid<Grade>().Name("grid").Columns(column =>
{
    column.Bound(model => model.GradeID).Hidden();
    column.Bound(model => model.GradeName_ar).Title("Grade Name(AR)").EditorTemplateName("RequiredString").Width(120);
    column.Bound(model => model.GradeName_en).Title("Grade Name(EN)").EditorTemplateName("RequiredString").Width(120);
    column.Command(command =>
    {
        command.Edit();
        command.Destroy();
    }).Title("Commands").Width(200);
})
.DataSource(datasource => datasource
        .Ajax()
    .Read(read => read.Action("Grade_Read", "Grade"))
    .Create(create => create.Action("Grade_Create", "Grade"))
    .Update(update => update.Action("Grade_Update", "Grade"))
    .Destroy(delete => delete.Action("Grade_Destroy", "Grade"))
    .PageSize(10)
    .Model(model =>
    {
        model.Id(m => m.GradeID);
        model.Field(m => m.GradeID).Editable(false);
    })
)
.Groupable()
.Sortable()
.Filterable()
.Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
)
.Scrollable()
.Resizable(resize => resize.Columns(true))
.Editable(ed => ed.Mode(GridEditMode.InLine))
.ToolBar(toolBar =>
{
    toolBar.Create();
    toolBar.Pdf();
    toolBar.Excel();
})
.Pdf(pdf => pdf
    .AllPages()
    .AvoidLinks()
    .PaperSize("A4")
    .Scale(0.8)
    .Margin("2cm", "1cm", "1cm", "1cm")
    .Landscape()
    .RepeatHeaders()
    .TemplateId("page-template")
    .FileName("Grade.pdf")
.ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
)
.Excel(excel => excel
    .FileName("Grade.xlsx")
    .Filterable(true)
    .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
)
)